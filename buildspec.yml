version: 0.2

environment_variables:
  plaintext:
    APP_NAME: baby
phases:
  install:
    commands:
      ## cd
      ## laravelのリポジトリに入っておく
      - cd laravel

      - echo install started on `date`

      ## Dockerデーモンを起動し、正常に起動が終わるまで待つ。
      - echo executed dockerd on `date`
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - echo dockerd started

      ## MySQLをインストールし、正常に起動できるまで待つ
      - docker-compose up -d

      ## composer実行
      - composer install --dev
  pre_build:
    commands:
      ## ECRにログイン
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

      ## Dockerイメージのタグとして使用するため、Gitのコミットハッシュを取得
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION

      ## .env.dev -> .envにリネーム
      - mv .env.dev .env
  build:
    commands:
      ## Dockerイメージのビルド
      - echo Building the Docker image...
      - docker pull $IMAGE_REPOSITORY_NAME:$APP_NAME && CACHE_OPTION="--cache-from $IMAGE_REPOSITORY_NAME:$APP_NAME" || true
      - docker build $CACHE_OPTION -t $IMAGE_REPOSITORY_NAME:$IMAGE_TAG -t $IMAGE_REPOSITORY_NAME:$APP_NAME .

      ## 構築したイメージ上で'composer run ci-check'しテスト実行
      - echo Testing the source code...
      - echo Build started on `date`
      - docker run -e "DB_HOST=127.0.0.1" -e "DB_PORT=3306" -e "DB_DATABASE=mysql" -e "DB_USERNAME=homestead" -e "DB_PASSWORD=password" --network=host --entrypoint="composer" $IMAGE_REPOSITORY_NAME:$IMAGE_TAG run ci-check

      ## DockerイメージのECRへのプッシュ
      - docker push $IMAGE_REPOSITORY_NAME
      - echo Writing image definitions file...

      - cd ..

      ## ECSにどのイメージを使用するか指示するためのファイルを作成
      - printf '[{"name":"phpfpm","imageUri":"%s"}]' $IMAGE_REPOSITORY_NAME:$IMAGE_TAG > imagedefinitions.json
  post_build:
    commands:
      - echo Build completed on `date`
cache:
  paths:
    # Composer用のキャッシュ
    - /root/.composer/**/*

    # Node用のキャッシュ
    - /root/.npm/**/*
    - /usr/lib/node_modules/**/*
    - /usr/lib/node_modules/**/*
artifacts:
  ## buildの最後で作成したファイルをアーティファクトを流す
  files: imagedefinitions.json